15.207.18.7
==============================
CMD Vs Entrypoint
=============================
RUN A Container.
=============================
How to set PID 1?
-------------------------------
CMD
Entrypoint
------------------------------
CMD Vs Entrypoint

CMD
	CAN BE CHANGED duruing run time.
Entrypoint
	CAN NOT BE CHANGED duruing run time.

Questions
============================
What if i mentioned - 2 CMD in one Dockerfile?
What if i mentioned - 2 Entrypoint in one Dockerfile?
What if i mentioned - 1 CMD and 1 Entrypoint in one Dockerfile?

How a container would behave?
==============================================================
==============================================================
What is Docker-Compose?
=====================

Solution 
- docker-compose
	Tool
		Read One file - docker-compose.yaml
------------------------------------------------
docker-compose.yaml
-----------------------------------------------
Servcies:
	Servcie1
		build - dockerfile
		image - imagename
		port
		env
		volume	
		net
		dependson

	Servcie2
		build - dockerfile
		image - imagename
		port
		env
		volume	
		net
		dependson
	Servcie3		
		build - dockerfile
		image - imagename
		port
		env
		volume	
		net
		dependson

==================================================
docker-compose up -d
docker-compose down
docker-compose stop
docker-compose start
docker-compose rm
docker-compose logs
docker-compose ps

  697  clear
  698  sudo curl -L "https://github.com/docker/compose/releases/download/1.27.4/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
  699  sudo chmod +x /usr/local/bin/docker-compose
  700  sudo ln -s /usr/local/bin/docker-compose /usr/bin/docker-compose
  701  docker-compose --version
  702  history


version: '2'
services:
  wordpress:
    image: wordpress:latest # https://hub.docker.com/_/wordpress/
    ports:
      - 80:80 # change ip if required
    volumes:
      - ./wp-app:/var/www/html # Full wordpress project
      #- ./plugin-name/trunk/:/var/www/html/wp-content/plugins/plugin-name # Plugin development
      #- ./theme-name/trunk/:/var/www/html/wp-content/themes/theme-name # Theme development
    environment:
      WORDPRESS_DB_HOST: db
      WORDPRESS_DB_NAME: wordpress
      WORDPRESS_DB_USER: root
      WORDPRESS_DB_PASSWORD: password
    depends_on:
      - db
    networks:
      - wordpress-network
  db:
    image: mysql:latest # https://hub.docker.com/_/mysql/ - or mariadb https://hub.docker.com/_/mariadb
    ports:
      - 3306:3306 # change ip if required
    volumes:
      - ./wp-data:/docker-entrypoint-initdb.d
    environment:
      MYSQL_DATABASE: wordpress
      MYSQL_ROOT_PASSWORD: password
    networks:
      - wordpress-network
networks:
  wordpress-network:
      driver: bridge



 710  docker-compose ps
  711  docker-compose up -d	[ build + create + start ]
  712  docker-compose ps
  713  docker-compose logs
  714  docker-compose ps
  715  docker-compose stop
  716  docker-compose ps
  717  docker-compose down   [ stop  + remove]
  718  docker-compose ps
  719  docker-compose start
  720  docker-compose up -d
  721  docker-compose ps
  722  docker-compose stop
  723  docker-compose rm


=======================================================================================================
=======================================================================================================
=======================================================================================================

Master
----------------------------
- API Server		- POD - Container - Image -> Google Registry
- Etcd			- POD - Container - Image -> Google Registry
- Controller Manager	- POD - Container - Image -> Google Registry
- Schedular		- POD - Container - Image -> Google Registry

- Kubelet
- Docker
- Kube Proxy		- POD - Container - Image -> Google Registry
	
Worker
----------------------------
- Kubelet
- Docker
- Kube Proxy		- POD - Container - Image -> Google Registry


Workstation
----------------------------
Kubectl


================================
How to setup a clustors?

Single Node - minikube - ONE VM

MultiNode
===================
Physcial Server OR VMs
- Kubeadm

Cloud
	Own 
		Kubeadm
		KOPS
	Hosted
		EKS
		AKS
		GKE

-----------------------------
40+ to setup k8s clustors

===============================================
Centos 1 - Cleanup + K8s Worker
Centos 2 - K8s Master
================================================
Master --> Workstation --> Worker
========================= ==========
	Centos2			Centos1		 	

https://www.devopsschool.com/blog/setting-up-kubernetes-clusters-using-kubeadm-manual-way-in-rhel-7-centos7/

Master		DONE
=====================
Step 1 - Step 10


Workstation 
====================
Step 11 & Step 12 & Step 13

Worker
===================
 
# Follow Step 1 
# Follow Step 2
# Follow Step 3
# Follow Step 4
# Follow Step 5
# Follow Step 6
# Follow Step 7
# Follow Step 8
&&&&
kubeadm join command....

13.233.53.11
===========================
To start using your cluster, you need to run the following as a regular user:

  mkdir -p $HOME/.kube
  sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
  sudo chown $(id -u):$(id -g) $HOME/.kube/config

You should now deploy a pod network to the cluster.
Run "kubectl apply -f [podnetwork].yaml" with one of the options listed at:
  https://kubernetes.io/docs/concepts/cluster-administration/addons/

Then you can join any number of worker nodes by running the following on each as root:

kubeadm join 172.31.13.255:6443 --token f6fwap.2gc6k2j44soywn98 \
    --discovery-token-ca-cert-hash sha256:39bc2d19ad6c2660acda5050b524272d872bcf6c5526dc3fd3cb866fa6b19f85

=======================================================
Worker
=============
65.0.86.116

How to clean up Existing docker in Centos1
===================================================
docker rm $(docker ps -aq)
docker rm -f -v $(docker ps -q)
iptables --flush
systemctl stop docker
echo "1" >/proc/sys/net/bridge/bridge-nf-call-iptables 
# REBOOT


# Follow Step 1 
# Follow Step 2
# Follow Step 3
# Follow Step 4
# Follow Step 5
# Follow Step 6
# Follow Step 7
# Follow Step 8
&&&&
kubeadm join command....










































