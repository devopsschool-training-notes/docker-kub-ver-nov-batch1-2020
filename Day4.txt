Worker has 
	kubelet
	- Get up
	- Look for the master - kubelet.conf
	- Reaches to master - ask for approval.
	- Pre approved token
	- kubelet would get cert of API server
	- kubelet watches api
	------------------------------
IP - 15.207.88.240
centos
centos123
=========================================
How kubectl connect to API server?
====================================== 
    workstation		master


kubectl 
	config
	$USER_HOME/.kube/config

what config file contains?
============================================
Clustor(S)
	Clustor1 - http://api-server
	Clustor2 - http://api-server
	Clustor3 - http://api-server
	Clustor4 - http://api-server
User (S)
	User 1 - cert
	User 2 - cert
	User 3 - cert
	User 4 - cert
Context (s)
	Context 1 = Clustor1 + User 2
	Context 2 = Clustor2 + User 1
	Context 3 = Clustor3 + User 3

curr-context - Context 3

=====================================================================================
What is your desire?
==========================================
Desire ==> YAML ==> kubectl ==> Api server
===========================================
What are the all API resources?


 30  kubectl
   31  clear
   32  kubectl api-resources
   33  clear
   34  kubectl api-resources
   35  kubectl api-resources | wc -l
   36  clear
   37  kubectl
   38  kubectl cluster-info
   39  kubectl version
   40  clear
   41  kubectl
   42  kubectl config
   43  kubectl config get-contexts
   44  kubectl view
   45  kubectl config view
   46  history



[centos@ip-172-31-13-255 ~]$ kubectl api-resources
NAME                              SHORTNAMES   APIGROUP                       NAMESPACED   KIND
bindings                                                                      true         Binding
componentstatuses                 cs                                          false        ComponentStatus
configmaps                        cm                                          true         ConfigMap
endpoints                         ep                                          true         Endpoints
events                            ev                                          true         Event
limitranges                       limits                                      true         LimitRange
namespaces                        ns                                          false        Namespace
nodes                             no                                          false        Node
persistentvolumeclaims            pvc                                         true         PersistentVolumeClaim
persistentvolumes                 pv                                          false        PersistentVolume
pods                              po                                          true         Pod
podtemplates                                                                  true         PodTemplate
replicationcontrollers            rc                                          true         ReplicationController
resourcequotas                    quota                                       true         ResourceQuota
secrets                                                                       true         Secret
serviceaccounts                   sa                                          true         ServiceAccount
services                          svc                                         true         Service
mutatingwebhookconfigurations                  admissionregistration.k8s.io   false        MutatingWebhookConfiguration
validatingwebhookconfigurations                admissionregistration.k8s.io   false        ValidatingWebhookConfiguration
customresourcedefinitions         crd,crds     apiextensions.k8s.io           false        CustomResourceDefinition
apiservices                                    apiregistration.k8s.io         false        APIService
controllerrevisions                            apps                           true         ControllerRevision
daemonsets                        ds           apps                           true         DaemonSet
deployments                       deploy       apps                           true         Deployment
replicasets                       rs           apps                           true         ReplicaSet
statefulsets                      sts          apps                           true         StatefulSet
tokenreviews                                   authentication.k8s.io          false        TokenReview
localsubjectaccessreviews                      authorization.k8s.io           true         LocalSubjectAccessReview
selfsubjectaccessreviews                       authorization.k8s.io           false        SelfSubjectAccessReview
selfsubjectrulesreviews                        authorization.k8s.io           false        SelfSubjectRulesReview
subjectaccessreviews                           authorization.k8s.io           false        SubjectAccessReview
horizontalpodautoscalers          hpa          autoscaling                    true         HorizontalPodAutoscaler
cronjobs                          cj           batch                          true         CronJob
jobs                                           batch                          true         Job
certificatesigningrequests        csr          certificates.k8s.io            false        CertificateSigningRequest
leases                                         coordination.k8s.io            true         Lease
endpointslices                                 discovery.k8s.io               true         EndpointSlice
events                            ev           events.k8s.io                  true         Event
ingresses                         ing          extensions                     true         Ingress
ingressclasses                                 networking.k8s.io              false        IngressClass
ingresses                         ing          networking.k8s.io              true         Ingress
networkpolicies                   netpol       networking.k8s.io              true         NetworkPolicy
runtimeclasses                                 node.k8s.io                    false        RuntimeClass
poddisruptionbudgets              pdb          policy                         true         PodDisruptionBudget
podsecuritypolicies               psp          policy                         false        PodSecurityPolicy
clusterrolebindings                            rbac.authorization.k8s.io      false        ClusterRoleBinding
clusterroles                                   rbac.authorization.k8s.io      false        ClusterRole
rolebindings                                   rbac.authorization.k8s.io      true         RoleBinding
roles                                          rbac.authorization.k8s.io      true         Role
priorityclasses                   pc           scheduling.k8s.io              false        PriorityClass
csidrivers                                     storage.k8s.io                 false        CSIDriver
csinodes                                       storage.k8s.io                 false        CSINode
storageclasses                    sc           storage.k8s.io                 false        StorageClass
volumeattachments                              storage.k8s.io                 false        VolumeAttachment


=====================
Namespace
POD
----
--
--
=================================================
Magic formula for each API resources.
---------------------------------------
CRUD
	Create
		CMD
			create
		YAML
			create -f yaml
	Read
		CMD
			get
			describe
		YAML
	Update
		CMD
			edit
		YAML
			apply -f yaml
	Delete
		CMD
			delete
		YAML
			delete -f yaml
=================================================
  53  clear
   54  kubectl get ns
   55  kubectl get pods
   56  kubectl get pods -n=kube-system
   57  clear
   58  kubectl
   59  clear
   60  kubectl get ns
   61  kubectl create ?
   62  kubectl create?
   63  kubectl
   64  clear
   65  kubectl create -h
   66  clear
   67  kubectl create ns -h
   68  clear
   69  kubectl create namespace dev
   70  kubectl create namespace qa
   71  kubectl get ns
   72  kubectl edit ns qa
   73  kubectl delete ns qa
   74  kubectl get ns
   75  history
===========================
POD
=============================================================

CRUD
	Create
		CMD
			create
		YAML
			create -f yaml
	Read
		CMD
			get
			describe
		YAML
	Update
		CMD
			edit
		YAML
			apply -f yaml
	Delete
		CMD
			delete
		YAML
			delete -f yaml


pod.yaml
-------------------
apiVersion: v1
kind: Pod
metadata:
  name: hello-pod
  labels: 
    app: webserver
spec:
  containers:
  - name: hello-ctr
    image: nginx
    ports:
    - containerPort: 80

  43  kubectl create -h
   44  clear
   45  ks
   46  ls
   47  pwd
   48  vi pod1.yaml
   49  kubectl create -f pod1.yaml
   50  kubectl get pods
   51  kubectl get ns
   52* kubectl create ns rajesh -
   53  clear
   54  kubectl create -f pod1.yaml
   55  kubectl create -f pod1.yaml -n=rajesh
   56  kubectl get pods
   57  kubectl get pods -n=rajesh
   58  kubectl get pods --all-namespaces
   59  clear
   60  kubectl get pods -o wide -n=rajesh
   61  kubectl describe pod hello-pod
   62  clear
   63  kubectl describe pod hello-pod -n=rajesh
   64  clear
   65  kubectl get pods -o wide -n=rajesh
   66  kubectl edit pod hello-pod -n=rajesh
   67  kubectl describe pod hello-pod -n=rajesh
   68  clear
   69  kubectl get pods -o wide -n=rajesh --show-lables
   70  kubectl get pods -o wide -n=rajesh --show-labels
   71  ls
   72  vi pod1.yaml
   73  kubectl apply -f pod1.yaml -n=rajesh
   74  kubectl get pods -o wide -n=rajesh --show-labels
   75  kubectl get pods
   76  kubectl delete pod hello-pod
   77  xlear
   78  clear
   79  kubectl delete -f pod1.yaml -n=rajesh
   80  history


Image
===========================
scmgalaxy/nginx-devopsschoolv1
scmgalaxy/nginx-devopsschoolv2
=======================
==============================================================
How to use pods?
====================================

  describe      Show details of a specific resource or group of resources
  logs          Print the logs for a container in a pod
  attach        Attach to a running container
  exec          Execute a command in a container
  port-forward  Forward one or more local ports to a pod
  cp            Copy files and directories to and from containers.
  auth          Inspect authorization


  96  kubectl get pods -n=rajesh
   97  kubectl describe pods hello-pod -n=rajesh
   98  clear
   99  kubectl get pods -n=rajesh
  100  kubectl logs hello-pod -n=rajesh
  101  kubectl get pods -n=rajesh -o wide
  102  watch kubectl get pods -n=rajesh -o wide
  103  kubectl logs hello-pod -n=rajesh
  104  watch kubectl logs hello-pod -n=rajesh
  105  clear
  106  watch kubectl get pods -n=rajesh -o wide
  107   kubectl get pods -n=rajesh -o wide
  108   kubectl attach hello-pod -n=rajesh
  109  clear
  110   kubectl exec hello-pod -n=rajesh ls /tmp
  111   kubectl exec hello-pod -n=rajesh ls /etc
  112  clear
  113   kubectl exec -it hello-pod -n=rajesh /bin/bash
  114  clear
  115   kubectl exec -h
  116  clear
  117  kubectl port-forward -h
  118  clear
  119  kubectl port-forward pod/hello-pod 8888:80 -n=rajesh
  120  clear
  121  kubectl cp -h
  122  clear
  123  kubectl get pod -n=rajesh
  124  ls
  125  kubectl cp pod1.yaml hello-pod:/tmp -n=rajesh
  126  kubectl exec hello-pod  -n=rajesh ls /tmp
  127  clear
  128  kubectl auth -h
  129  kubectl auth can-i create pod
  130  kubectl auth can-i -h
  131  kubectl auth can-i '*' '*'
  132  clear
  133  ls

 79  kubectl get pod -o wide
   80  kubectl get pod -o wide -n=rajesh
   81  curl http://10.44.0.7
   82  watch curl http://10.44.0.7
   83  clear
   84  curl http://localhost
   85  curl http://localhost:8888
   86  history

ReplicationController
==============================================================================
==============================================================================
Replication - 1 POD to Multiple
Controller - Control your number of desire Pods == must match with Actual PODS.

Using Rc, you can get multiple PODS.

apiVersion: v1
kind: ReplicationController
metadata:
  name: hello-rc
spec:
  replicas: 2   
  template:
    metadata:
      labels:
        app: hello-world
    spec:
      containers:
      - name: hello-ctr
        image: scmgalaxy/nginx-devopsschoolv1
        ports:
        - containerPort: 80



 138  kubectl create -h
  139  clear
  140  ls
  141  vi rc.yaml
  142  kubectl get rc -n=rajesh
  143  kubectl
  144  kubectl api-resources
  145  clear
  146  kubectl get rc -n=rajesh
  147  ls
  148  kubectl create -f rc.yaml -n=rajesh
  149  kubectl get rc -n=rajesh
  150  kubectl get pods -n=rajesh
  151  kubectl describe rc hello-rc -n=rajesh
  152  clear
  153  kubectl edit rc hello-rc -n=rajesh
  154  kubectl get rc -n=rajesh
  155  vi rc.yaml
  156  kubectl get rc -n=rajesh
  157  kubectl apply -f rc.yaml -n=rajesh
  158  kubectl get rc -n=rajesh
  159  kubectl
  160  clear
  161  kubectl scale -h
  162  clear
  163  kubectl get rc -n=rajesh
  164   kubectl scale --replicas=2 rc/hello-rc -n=rajesh
  165  kubectl get rc -n=rajesh
  166  kubectl get pods -n=rajesh
  167  clear
  168  kubectl get rc -n=rajesh
  169  kubectl get pods -n=rajesh
  170  kubectl delete pod hello-rc-d6j9g hello-rc-vnqcf -n=rajesh
  171  kubectl get pods -n=rajesh
  172  kubectl get rc -n=rajesh
  173  kubectl delete rc hello-rc -n=rajesh
  174  kubectl get pods -n=rajesh
  175  clear
  176  kubectl get pods -n=rajesh
  177  kubectl delete pod hello-pod -n=rajesh
  178  kubectl get pods
  179  kubectl delete pods hello-pod test-pod

===========================================================================
===========================================================================
Deployment
	-------------------
	Replication + Controller
	--------------
	Replicas Sets
		 deployment-controller

PODS -> Replicas Sets ->  Deployment

Versioning
Rollout
Rollback


Image
===========================
scmgalaxy/nginx-devopsschoolv1
scmgalaxy/nginx-devopsschoolv2
=======================


kubectl create deployment my-dep --image=scmgalaxy/nginx-devopsschoolv1 -n=rajesh

  182  kubectl create -h
  183  kubectl create deployment -h
  184  clear
  185  kubectl get deploy -n=rajesh
  186  kubectl create deployment my-dep --image=scmgalaxy/nginx-devopsschoolv1 -n=rajesh
  187  kubectl get deploy -n=rajesh
  188  kubectl describe deploy my-dep -n=rajesh
  189  kubectl get rs -n=rajesh
  190  kubectl describe rs rs -n=rajesh
  191  kubectl describe rs my-dep-747b4ffb56 -n=rajesh
  192  clear
  193  kubectl get pods
  194  kubectl get pods -n=rajesh
  195  kubectl describe pod my-dep-747b4ffb56-ttd72 -n=rajesh
  196  clear
  197  kubectl get deploy -n=rajesh
  198  kubectl scale --replicas=4 deploy/my-dep -n=rajesh
  199  kubectl get deploy -n=rajesh
  200  kubectl get pods -n=rajesh
  201  kubectl get deploy -n=rajesh
  202  kubectl edit deploy my-dep -n=rajesh
  203  kubectl get deploy -n=rajesh
  204  clear
  205  kubectl get pod -n=rajesh
  206  kubectl delete pod my-dep-747b4ffb56-ttd72 my-dep-747b4ffb56-p54mq -n=rajesh
  207  kubectl get pod -n=rajesh
  208  history

  211  kubectl
  212  clear
  213  kubectl exaplain pod
  214  kubectl explain pod
  215  kubectl explain pod.spec
  216  kubectl explain pod.spec.containers
  217  kubectl explain ns
  218  kubectl explain ns.spec
  219  kubectl explain deploy
  220  kubectl explain deploy.spec
  221  kubectl explain deploy.spec.template
  222  kubectl explain deploy.spec.template.spec
  223  kubectl explain rc
  224  kubectl explain rc.spec
  225  kubectl explain rc.spec.template
  226  history

  229  kubectl get deploy -n=rajesh
  230  kubectl describe deploy my-dep -n=rajesh
  231  clear
  232  kubectl get deploy my-dep -n=rajesh
  233  kubectl get deploy my-dep -n=rajesh -o yaml
  234  kubectl get deploy my-dep -n=rajesh -o json
  235  clear
  236  kubectl get deploy my-dep -n=rajesh -o yaml
  237  kubectl get deploy my-dep -n=rajesh -o yaml --export
  238  clear
  239  kubectl get deploy my-dep -n=rajesh -o yaml
  240  clear
  241  kubectl get deploy my-dep -n=rajesh -o yaml >> dep1.yaml
  242  ls
  243  more dep1.yaml
  244  vi dep1.yaml
  245  ls
  246  clear
  247  ls
  248  kubectl get deploy my-dep -n=rajesh
  249  ks
  250  clear
  251  ls
  252  kubectl apply -f dep1.yaml -n=rajesh
  253  kubectl get deploy my-dep -n=rajesh
  254  kubectl get deploy -n=rajesh

Versioning

Rollout
Rollback
============================================


[centos@ip-172-31-13-255 rajeshk]$ kubectl rollout -h
Manage the rollout of a resource.

 Valid resource types include:

  *  deployments
  *  daemonsets
  *  statefulsets

Examples:
  # Rollback to the previous deployment
  kubectl rollout undo deployment/abc

  # Check the rollout status of a daemonset
  kubectl rollout status daemonset/foo

Available Commands:
  history     View rollout history
  pause       Mark the provided resource as paused
  restart     Restart a resource
  resume      Resume a paused resource
  status      Show the status of the rollout
  undo        Undo a previous rollout

Usage:
  kubectl rollout SUBCOMMAND [options]



274  kubectl rollout -h
  275  kubectl get deploy -n=rajesh
  276  clear
  277  kubectl get deploy -n=rajesh
  278  kubectl rollout history deploy my-dep1 =n=rajesh
  279  kubectl rollout history deploy my-dep1 -n=rajesh
  280  kubectl edit deploy my-dep1 -n=rajesh
  281  kubectl rollout history deploy my-dep1 =n=rajesh
  282  kubectl rollout history deploy my-dep1 -n=rajesh
  283  curl http://10.44.0.5
  284  kubectl get pods -n=rajesh -o wide
  285  curl http://10.44.0.1



Rollout To NewVersion
Rollback To OldVersion
======================================
kubectl apply -f dep1.yaml -n=rajesh	# For version1
kubectl rollout status deploy/my-dep1 -n=rajesh 
kubectl get deploy -n=rajesh
kubectl rollout history deploy my-dep1 -n=rajesh
kubectl get pods -n=rajesh -o wide
curl http://10.44.0.5

--Rollout strategy
kubectl describe deploy my-dep1 -n=rajesh

#### EDIT ---kubectl apply -f dep2.yaml -n=rajesh	# For version2
kubectl rollout status deploy/my-dep1 -n=rajesh 
kubectl rollout history deploy my-dep1 -n=rajesh
kubectl get pods -n=rajesh -o wide
curl http://

kubectl rollout status deploy/my-dep1 -n=rajesh  

##kubectl scale --replicas=10 deploy/my-dep1 -n=rajesh

kubectl rollout status deploy/my-dep1 -n=rajesh  

kubectl rollout history deploy my-dep1 =n=rajesh    

kubectl rollout undo deploy/my-dep1 --to-revision=1 -n=rajesh
kubectl get pods -n=rajesh -o wide
curl http://



